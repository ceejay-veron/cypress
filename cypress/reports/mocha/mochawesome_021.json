{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
<<<<<<< HEAD
    "start": "2023-07-24T15:21:05.359Z",
    "end": "2023-07-24T15:22:47.750Z",
    "duration": 102391,
=======
    "start": "2023-08-22T14:04:47.546Z",
    "end": "2023-08-22T14:08:46.485Z",
    "duration": 238939,
>>>>>>> 6758b0e7ff0c6b758b70610ce02f26bc896d4963
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
<<<<<<< HEAD
      "uuid": "d16baa4a-492a-443d-a2f6-1aa49e7fe56e",
      "title": "",
      "fullFile": "cypress\\e2e\\VerveAccess-UI-Tests-UAT\\A-CorporateUserUATTests\\Dashboard.cy.js",
      "file": "cypress\\e2e\\VerveAccess-UI-Tests-UAT\\A-CorporateUserUATTests\\Dashboard.cy.js",
=======
      "uuid": "e074ec38-1665-4041-9205-477642245283",
      "title": "",
      "fullFile": "cypress\\e2e\\VerveAccess-UI-Tests-UAT\\D-VerveAdminUATTests\\ChipTypes.cy.js",
      "file": "cypress\\e2e\\VerveAccess-UI-Tests-UAT\\D-VerveAdminUATTests\\ChipTypes.cy.js",
>>>>>>> 6758b0e7ff0c6b758b70610ce02f26bc896d4963
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
<<<<<<< HEAD
          "uuid": "4d7a2473-1d57-4e4c-80ab-e3e630041971",
=======
          "uuid": "fd62c6f1-8f85-4b74-b1da-2447e7f533ce",
>>>>>>> 6758b0e7ff0c6b758b70610ce02f26bc896d4963
          "title": "visit Verve Access",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
<<<<<<< HEAD
              "title": "This test views the dasboard elements",
              "fullTitle": "visit Verve Access This test views the dasboard elements",
              "timedOut": null,
              "duration": 38017,
=======
              "title": "should test for url, Navigate to Chiptype Page and add chiptype",
              "fullTitle": "visit Verve Access should test for url, Navigate to Chiptype Page and add chiptype",
              "timedOut": null,
              "duration": 143734,
>>>>>>> 6758b0e7ff0c6b758b70610ce02f26bc896d4963
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
<<<<<<< HEAD
              "code": "//View Dashboard Widgets\ncy.get('.top-section');\ncy.get('.top-section > :nth-child(1)').contains('Total Decals');\ncy.get('body > div:nth-child(2) > div:nth-child(1) > div:nth-child(3) > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > div:nth-child(2) > div:nth-child(2)'); //Artwork widget\ncy.get('.top-section > :nth-child(3)'); //Whitelist Cards Widget\ncy.get('.top-section > :nth-child(4)'); //Users widget\nln.setLogout();",
              "err": {},
              "uuid": "a8d1c2e9-4c90-4884-8ef8-830dabff992f",
              "parentUUID": "4d7a2473-1d57-4e4c-80ab-e3e630041971",
=======
              "code": "cy.title().should('eq', 'Verve Access');\ncy.location('protocol').should('eq', 'https:'); // /cy.contains('Get Started Now').click({timeout : 2000})\ncy.url().should('include', 'admin');\ncy.reload({\n  timeout: 130000\n});\ncy.get('form').within($form => {\n  ln.setUserName(Cypress.env('vervAdminUser'));\n  ln.setPassword(Cypress.env('verveAdminPass'));\n  ln.clickSubmit();\n});\ncy.get('.ant-dropdown-link > .sidebar-svg').click().wait(3000);\ncy.contains('VERVE ADMIN').should('be.visible'); //cy.get('.red').click()\nct.setGoToChipTypePage();\ncy.url().should('include', 'admin/chiptypes');\ncy.contains('Chip Types').should('be.visible');\nct.setAddChipButton();\nct.setCardType(varTest.test);\nct.setCardMan(varTest2.newtest);\nct.setChipprod(varTest2.testname);\nct.setDate('28/09/2023');\nct.setSubmitbutton();\nct.setsuccessMessage();\ncy.wait(6000); //should not add existing chiptype\nct.setAddChipButton();\nct.setCardType(varTest.test);\nct.setCardMan(varTest2.newtest);\nct.setChipprod(varTest2.testname);\nct.setDate('28/09/2023');\nct.setSubmitbutton();\nct.setErrorMessage1();\ncy.wait(6000);\nct.setclose(); //should not adding any chiptype dtails\nct.setAddChipButton(' ');\nct.setCardType(' ');\nct.setCardMan(' ');\nct.setChipprod(' ');\nct.setSubmitbutton();\nct.setErrorMessage2();\nct.setErrorMessage3();\nct.setErrorMessage4();\ncy.wait(6000);\nct.setclose(); //should not add chiptype without Card type\nct.setAddChipButton();\nct.setCardType(' ');\nct.setCardMan(varTest2.newtest);\nct.setChipprod(varTest2.testname);\nct.setDate('28/09/2023');\nct.setSubmitbutton();\nct.setErrorMessage2();\ncy.wait(6000);\nct.setclose(); //should not add chiptype without Card man\nct.setAddChipButton();\nct.setCardType(varTest.test);\nct.setCardMan(' ');\nct.setChipprod(varTest2.testname);\nct.setDate('28/09/2023');\nct.setSubmitbutton();\nct.setErrorMessage3();\ncy.wait(6000);\nct.setclose(); //should not add chiptype without Card man\nct.setAddChipButton();\nct.setCardType(varTest.test);\nct.setCardMan(varTest2.newtest);\nct.setChipprod(' ');\nct.setDate('28/09/2023');\nct.setSubmitbutton();\nct.setErrorMessage4();\ncy.wait(6000);\nct.setclose(); //should not add chiptype without expiry date\nct.setAddChipButton();\nct.setCardType(varTest.test);\nct.setCardMan(varTest2.newtest);\nct.setChipprod(varTest2.testname);\nct.setDate(' ');\nct.setSubmitbutton();\nct.setErrorMessage5();\ncy.wait(6000);\nct.setclose(); //Table header should contain Name Card Type, Card Manufacturer, Chip Product, Expiry Date and  Action\ncy.contains('Card Type').should('be.visible');\ncy.contains('Card Manufacturer').should('be.visible');\ncy.contains('Chip Product').should('be.visible');\ncy.contains('Expiry Date').should('be.visible');\ncy.contains('Action').should('be.visible');\ncy.contains('Active').should('be.visible');",
              "err": {},
              "uuid": "e4d49607-b96b-4c74-a3af-f7da90734c01",
              "parentUUID": "fd62c6f1-8f85-4b74-b1da-2447e7f533ce",
>>>>>>> 6758b0e7ff0c6b758b70610ce02f26bc896d4963
              "isHook": false,
              "skipped": false
            },
            {
<<<<<<< HEAD
              "title": "should View guides section from the dashboard after login ",
              "fullTitle": "visit Verve Access should View guides section from the dashboard after login ",
              "timedOut": null,
              "duration": 33979,
=======
              "title": "should Navigate to inactive tab",
              "fullTitle": "visit Verve Access should Navigate to inactive tab",
              "timedOut": null,
              "duration": 24461,
>>>>>>> 6758b0e7ff0c6b758b70610ce02f26bc896d4963
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
<<<<<<< HEAD
              "code": "//Views the guides section, views all categories from the dashboard and views category guides from the dashboard\nguide.GetDashboardGuidesSection();\nguide.ViewAllGuidesFromDashboard();\nguide.ViewCategoryGuidesFromDashboard();\nln.setLogout();",
              "err": {},
              "uuid": "ae0cbc9a-bf2e-41c1-9731-85c535a8d255",
              "parentUUID": "4d7a2473-1d57-4e4c-80ab-e3e630041971",
=======
              "code": "cy.reload({\n  timeout: 130000\n});\ncy.get('form').within($form => {\n  ln.setUserName(Cypress.env('vervAdminUser'));\n  ln.setPassword(Cypress.env('verveAdminPass'));\n  ln.clickSubmit();\n});\nct.setGoToChipTypePage();\nct.setNavigateinactive();\ncy.wait(3000);\ncy.contains('Card Type').should('be.visible');\ncy.contains('Card Manufacturer').should('be.visible');\ncy.contains('Chip Product').should('be.visible');\ncy.contains('Expiry Date').should('be.visible');\ncy.contains('Inactive').should('be.visible');",
              "err": {},
              "uuid": "fa00f4ab-ff51-449b-8a04-de41bd6270e0",
              "parentUUID": "fd62c6f1-8f85-4b74-b1da-2447e7f533ce",
>>>>>>> 6758b0e7ff0c6b758b70610ce02f26bc896d4963
              "isHook": false,
              "skipped": false
            },
            {
<<<<<<< HEAD
              "title": "This test navigates the user to the verve certification portal",
              "fullTitle": "visit Verve Access This test navigates the user to the verve certification portal",
              "timedOut": null,
              "duration": 29980,
=======
              "title": "should Search for chip type on active tab",
              "fullTitle": "visit Verve Access should Search for chip type on active tab",
              "timedOut": null,
              "duration": 70122,
>>>>>>> 6758b0e7ff0c6b758b70610ce02f26bc896d4963
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
<<<<<<< HEAD
              "code": "//Verve Certification Portal\ncy.get('.verve-cert-container').contains('Go to Verve Certification Portal');\ncy.get('.verve-cert-click').click();\nln.setLogout();",
              "err": {},
              "uuid": "d91386c4-6129-48f6-862c-7dc1d9d22002",
              "parentUUID": "4d7a2473-1d57-4e4c-80ab-e3e630041971",
=======
              "code": "cy.reload({\n  timeout: 130000\n});\ncy.get('form').within($form => {\n  ln.setUserName(Cypress.env('vervAdminUser'));\n  ln.setPassword(Cypress.env('verveAdminPass'));\n  ln.clickSubmit();\n}); // Serach by complete card Type\nct.setGoToChipTypePage();\nct.setSearch(varTest.test);\nct.setVerifySearch(varTest.test);\ncy.reload(); // Serach by incomplete card Type\nct.setGoToChipTypePage();\nct.setSearch(varTest.test);\nct.setVerifySearch(varTest.test);\ncy.reload(); // Serach by complete card Man\nct.setGoToChipTypePage();\nct.setSearch(varTest2.newtest);\nct.setVerifySearch(varTest2.newtest);\ncy.reload(); // Serach by incomplete card Man\nct.setGoToChipTypePage();\nct.setSearch(varTest2.newtest);\nct.setVerifySearch(varTest2.newtest);\ncy.reload(); // Serach by complete card product\nct.setGoToChipTypePage();\nct.setSearch(varTest2.testname);\nct.setVerifySearch(varTest2.testname);\ncy.reload(); // Serach by incomplete card Product\nct.setGoToChipTypePage();\nct.setSearch(varTest2.testname);\nct.setVerifySearch(varTest2.testname);\ncy.reload(); // Serach by non-existing chip type details\nct.setGoToChipTypePage();\nct.setSearch('zabrosdjdwriyfdjncsljds');\nct.setVerifySearch('No Data to Display');\ncy.reload(); // Serach by empty space \nct.setGoToChipTypePage();\nct.setSearch(' ');\nct.setVerifySearch('1');\ncy.reload();",
              "err": {},
              "uuid": "737956d0-432a-4da3-be88-454ad5cd9312",
              "parentUUID": "fd62c6f1-8f85-4b74-b1da-2447e7f533ce",
>>>>>>> 6758b0e7ff0c6b758b70610ce02f26bc896d4963
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
<<<<<<< HEAD
            "a8d1c2e9-4c90-4884-8ef8-830dabff992f",
            "ae0cbc9a-bf2e-41c1-9731-85c535a8d255",
            "d91386c4-6129-48f6-862c-7dc1d9d22002"
=======
            "e4d49607-b96b-4c74-a3af-f7da90734c01",
            "fa00f4ab-ff51-449b-8a04-de41bd6270e0",
            "737956d0-432a-4da3-be88-454ad5cd9312"
>>>>>>> 6758b0e7ff0c6b758b70610ce02f26bc896d4963
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
<<<<<<< HEAD
          "duration": 101976,
=======
          "duration": 238317,
>>>>>>> 6758b0e7ff0c6b758b70610ce02f26bc896d4963
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "mochaFile": "cypress/reports/results/my-test-output-[hash].xml",
        "quite": true,
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}